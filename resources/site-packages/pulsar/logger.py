# Borrowed from xbmcswift
import logging
import xbmc
from pulsar.addon import ADDON_NAME

class XBMCFilter(object):
    xbmc_levels = {
        'DEBUG': 0,
        'INFO': 2,
        'WARNING': 3,
        'ERROR': 4,
        'LOGCRITICAL': 5,
    }

    def filter(self, record):
        xbmc_level = self.xbmc_levels.get(record.levelname)
        xbmc.log(record.getMessage(), xbmc_level)
        return False


def _get_logger():
    _log = logging.getLogger(ADDON_NAME)
    _log.setLevel(logging.DEBUG)
    handler = logging.StreamHandler()
    formatter = logging.Formatter(
        '%(asctime)s - %(levelname)s - [%(name)s] %(message)s')
    handler.setFormatter(formatter)
    _log.addHandler(handler)
    _log.addFilter(XBMCFilter())
    return _log

log = _get_logger()
